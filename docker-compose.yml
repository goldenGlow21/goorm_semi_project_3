version: "3.9"

services:
  mongo1:
    image: mongo:latest
    container_name: mongo1
    networks:
      - my-cluster
    ports:
      - "30001:30001"
    command: mongod --replSet my-rs --port 30001
    volumes:
      - ./data/mongo1:/data/db

  mongo2:
    image: mongo:latest
    container_name: mongo2
    networks:
      - my-cluster
    ports:
      - "30002:30002"
    command: mongod --replSet my-rs --port 30002
    volumes:
      - ./data/mongo2:/data/db

  mongo3:
    image: mongo:latest
    container_name: mongo3
    networks:
      - my-cluster
    ports:
      - "30003:30003"
    command: mongod --replSet my-rs --port 30003
    volumes:
      - ./data/mongo3:/data/db

  setup:
    image: alpine/mongosh
    container_name: mongo_setup
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - my-cluster
    entrypoint: >
      bash -c "
      sleep 10 &&
      mongosh --host mongo1 --port 30001 --eval '
        rs.initiate({
          _id: \"my-rs\",
          members: [
            { _id: 0, host: \"mongo1:30001\" },
            { _id: 1, host: \"mongo2:30002\" },
            { _id: 2, host: \"mongo3:30003\" }
          ]
        });
      '"


  server:
    build:
      context: .
      dockerfile: crawling/Dockerfile
    container_name: server
    ports:
      - "5001:5000"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    environment:
      - TOR_PROXY=tor:9050
    networks:
      - my-cluster

  tor:
    container_name: tor
    image: dockurr/tor
    ports:
      - 9050:9050
      - 9051:9051
    volumes:
      - ./torrc:/etc/tor/torrc
      - ./data:/var/lib/tor
    networks:
      - my-cluster

networks:
  my-cluster:
    driver: bridge